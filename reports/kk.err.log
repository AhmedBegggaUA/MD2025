Traceback (most recent call last):
  File "/Users/ahmedbegga/miniconda3/envs/phd/lib/python3.9/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/Users/ahmedbegga/miniconda3/envs/phd/lib/python3.9/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/Users/ahmedbegga/miniconda3/envs/phd/lib/python3.9/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/Users/ahmedbegga/miniconda3/envs/phd/lib/python3.9/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/Users/ahmedbegga/miniconda3/envs/phd/lib/python3.9/asyncio/base_events.py", line 647, in run_until_complete
    return future.result()
  File "/Users/ahmedbegga/miniconda3/envs/phd/lib/python3.9/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/Users/ahmedbegga/miniconda3/envs/phd/lib/python3.9/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/ahmedbegga/miniconda3/envs/phd/lib/python3.9/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# Define source and target nodes
source = 'Bilbao'
target = 'Sevilla'

# Compare with NetworkX
path = nx.shortest_path(G, source, target)
print(f"\nNetworkX result:")
print(f"Shortest path: {path}")
print(f"Path length: {len(path) - 1} edges")

# Run BFS
bfs_steps, path = bfs_numpy(G, source, target)
print(f"BFS Path from {source} to {target}:")
print(f"Number of steps: {bfs_steps}")
print(f"Shortest path: {path}")
print(f"Path length: {len(path) - 1} edges")
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mNodeNotFound[0m                              Traceback (most recent call last)
Cell [0;32mIn[6], line 6[0m
[1;32m      3[0m target [38;5;241m=[39m [38;5;124m'[39m[38;5;124mSevilla[39m[38;5;124m'[39m
[1;32m      5[0m [38;5;66;03m# Compare with NetworkX[39;00m
[0;32m----> 6[0m path [38;5;241m=[39m [43mnx[49m[38;5;241;43m.[39;49m[43mshortest_path[49m[43m([49m[43mG[49m[43m,[49m[43m [49m[43msource[49m[43m,[49m[43m [49m[43mtarget[49m[43m)[49m
[1;32m      7[0m [38;5;28mprint[39m([38;5;124mf[39m[38;5;124m"[39m[38;5;130;01m\n[39;00m[38;5;124mNetworkX result:[39m[38;5;124m"[39m)
[1;32m      8[0m [38;5;28mprint[39m([38;5;124mf[39m[38;5;124m"[39m[38;5;124mShortest path: [39m[38;5;132;01m{[39;00mpath[38;5;132;01m}[39;00m[38;5;124m"[39m)

File [0;32m~/miniconda3/envs/phd/lib/python3.9/site-packages/networkx/utils/backends.py:412[0m, in [0;36m_dispatch.__call__[0;34m(self, backend, *args, **kwargs)[0m
[1;32m    409[0m [38;5;28;01mdef[39;00m [38;5;21m__call__[39m([38;5;28mself[39m, [38;5;241m/[39m, [38;5;241m*[39margs, backend[38;5;241m=[39m[38;5;28;01mNone[39;00m, [38;5;241m*[39m[38;5;241m*[39mkwargs):
[1;32m    410[0m     [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m backends:
[1;32m    411[0m         [38;5;66;03m# Fast path if no backends are installed[39;00m
[0;32m--> 412[0m         [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43morig_func[49m[43m([49m[38;5;241;43m*[39;49m[43margs[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m
[1;32m    414[0m     [38;5;66;03m# Use `backend_name` in this function instead of `backend`[39;00m
[1;32m    415[0m     backend_name [38;5;241m=[39m backend

File [0;32m~/miniconda3/envs/phd/lib/python3.9/site-packages/networkx/algorithms/shortest_paths/generic.py:173[0m, in [0;36mshortest_path[0;34m(G, source, target, weight, method)[0m
[1;32m    170[0m [38;5;28;01melse[39;00m:
[1;32m    171[0m     [38;5;66;03m# Find shortest source-target path.[39;00m
[1;32m    172[0m     [38;5;28;01mif[39;00m method [38;5;241m==[39m [38;5;124m"[39m[38;5;124munweighted[39m[38;5;124m"[39m:
[0;32m--> 173[0m         paths [38;5;241m=[39m [43mnx[49m[38;5;241;43m.[39;49m[43mbidirectional_shortest_path[49m[43m([49m[43mG[49m[43m,[49m[43m [49m[43msource[49m[43m,[49m[43m [49m[43mtarget[49m[43m)[49m
[1;32m    174[0m     [38;5;28;01melif[39;00m method [38;5;241m==[39m [38;5;124m"[39m[38;5;124mdijkstra[39m[38;5;124m"[39m:
[1;32m    175[0m         _, paths [38;5;241m=[39m nx[38;5;241m.[39mbidirectional_dijkstra(G, source, target, weight)

File [0;32m~/miniconda3/envs/phd/lib/python3.9/site-packages/networkx/utils/backends.py:412[0m, in [0;36m_dispatch.__call__[0;34m(self, backend, *args, **kwargs)[0m
[1;32m    409[0m [38;5;28;01mdef[39;00m [38;5;21m__call__[39m([38;5;28mself[39m, [38;5;241m/[39m, [38;5;241m*[39margs, backend[38;5;241m=[39m[38;5;28;01mNone[39;00m, [38;5;241m*[39m[38;5;241m*[39mkwargs):
[1;32m    410[0m     [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m backends:
[1;32m    411[0m         [38;5;66;03m# Fast path if no backends are installed[39;00m
[0;32m--> 412[0m         [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43morig_func[49m[43m([49m[38;5;241;43m*[39;49m[43margs[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m
[1;32m    414[0m     [38;5;66;03m# Use `backend_name` in this function instead of `backend`[39;00m
[1;32m    415[0m     backend_name [38;5;241m=[39m backend

File [0;32m~/miniconda3/envs/phd/lib/python3.9/site-packages/networkx/algorithms/shortest_paths/unweighted.py:238[0m, in [0;36mbidirectional_shortest_path[0;34m(G, source, target)[0m
[1;32m    236[0m [38;5;28;01mif[39;00m source [38;5;129;01mnot[39;00m [38;5;129;01min[39;00m G [38;5;129;01mor[39;00m target [38;5;129;01mnot[39;00m [38;5;129;01min[39;00m G:
[1;32m    237[0m     msg [38;5;241m=[39m [38;5;124mf[39m[38;5;124m"[39m[38;5;124mEither source [39m[38;5;132;01m{[39;00msource[38;5;132;01m}[39;00m[38;5;124m or target [39m[38;5;132;01m{[39;00mtarget[38;5;132;01m}[39;00m[38;5;124m is not in G[39m[38;5;124m"[39m
[0;32m--> 238[0m     [38;5;28;01mraise[39;00m nx[38;5;241m.[39mNodeNotFound(msg)
[1;32m    240[0m [38;5;66;03m# call helper to do the real work[39;00m
[1;32m    241[0m results [38;5;241m=[39m _bidirectional_pred_succ(G, source, target)

[0;31mNodeNotFound[0m: Either source Bilbao or target Sevilla is not in G
NodeNotFound: Either source Bilbao or target Sevilla is not in G

